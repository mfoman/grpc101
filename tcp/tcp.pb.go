// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: tcp/tcp.proto

package tcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tcp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source   string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Dest     string `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
	Seq      string `protobuf:"bytes,3,opt,name=seq,proto3" json:"seq,omitempty"`
	Ack      string `protobuf:"bytes,4,opt,name=ack,proto3" json:"ack,omitempty"`
	Offset   string `protobuf:"bytes,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Reserved string `protobuf:"bytes,6,opt,name=reserved,proto3" json:"reserved,omitempty"`
	Flags    string `protobuf:"bytes,7,opt,name=flags,proto3" json:"flags,omitempty"`
	Window   string `protobuf:"bytes,8,opt,name=window,proto3" json:"window,omitempty"`
	Checksum string `protobuf:"bytes,9,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Urgentp  string `protobuf:"bytes,10,opt,name=urgentp,proto3" json:"urgentp,omitempty"`
	Options  string `protobuf:"bytes,11,opt,name=options,proto3" json:"options,omitempty"`
	Data     string `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Tcp) Reset() {
	*x = Tcp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tcp_tcp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp) ProtoMessage() {}

func (x *Tcp) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_tcp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp.ProtoReflect.Descriptor instead.
func (*Tcp) Descriptor() ([]byte, []int) {
	return file_tcp_tcp_proto_rawDescGZIP(), []int{0}
}

func (x *Tcp) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Tcp) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

func (x *Tcp) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *Tcp) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

func (x *Tcp) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *Tcp) GetReserved() string {
	if x != nil {
		return x.Reserved
	}
	return ""
}

func (x *Tcp) GetFlags() string {
	if x != nil {
		return x.Flags
	}
	return ""
}

func (x *Tcp) GetWindow() string {
	if x != nil {
		return x.Window
	}
	return ""
}

func (x *Tcp) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Tcp) GetUrgentp() string {
	if x != nil {
		return x.Urgentp
	}
	return ""
}

func (x *Tcp) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *Tcp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_tcp_tcp_proto protoreflect.FileDescriptor

var file_tcp_tcp_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x63, 0x70, 0x2f, 0x74, 0x63, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x74, 0x63, 0x70, 0x22, 0x9b, 0x02, 0x0a, 0x03, 0x54, 0x63, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x72,
	0x67, 0x65, 0x6e, 0x74, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x67,
	0x65, 0x6e, 0x74, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x31, 0x0a, 0x0c, 0x74, 0x63, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x08, 0x2e, 0x74, 0x63, 0x70, 0x2e, 0x54, 0x63, 0x70, 0x1a, 0x08, 0x2e, 0x74, 0x63,
	0x70, 0x2e, 0x54, 0x63, 0x70, 0x42, 0x27, 0x5a, 0x25, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x66, 0x6f, 0x6d,
	0x61, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x31, 0x30, 0x31, 0x3b, 0x74, 0x63, 0x70, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tcp_tcp_proto_rawDescOnce sync.Once
	file_tcp_tcp_proto_rawDescData = file_tcp_tcp_proto_rawDesc
)

func file_tcp_tcp_proto_rawDescGZIP() []byte {
	file_tcp_tcp_proto_rawDescOnce.Do(func() {
		file_tcp_tcp_proto_rawDescData = protoimpl.X.CompressGZIP(file_tcp_tcp_proto_rawDescData)
	})
	return file_tcp_tcp_proto_rawDescData
}

var file_tcp_tcp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tcp_tcp_proto_goTypes = []interface{}{
	(*Tcp)(nil), // 0: tcp.Tcp
}
var file_tcp_tcp_proto_depIdxs = []int32{
	0, // 0: tcp.tcpMessaging.sendMessage:input_type -> tcp.Tcp
	0, // 1: tcp.tcpMessaging.sendMessage:output_type -> tcp.Tcp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tcp_tcp_proto_init() }
func file_tcp_tcp_proto_init() {
	if File_tcp_tcp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tcp_tcp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tcp_tcp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tcp_tcp_proto_goTypes,
		DependencyIndexes: file_tcp_tcp_proto_depIdxs,
		MessageInfos:      file_tcp_tcp_proto_msgTypes,
	}.Build()
	File_tcp_tcp_proto = out.File
	file_tcp_tcp_proto_rawDesc = nil
	file_tcp_tcp_proto_goTypes = nil
	file_tcp_tcp_proto_depIdxs = nil
}
